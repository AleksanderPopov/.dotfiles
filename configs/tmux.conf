# ----------------------------------------------
# ------------------PLUGINS---------------------
# ----------------------------------------------
set -g @plugin 'tmux-plugins/tpm'
# tmux sessions
set -g @resurrect-processes 'watch "~nvim"'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-save-interval 2
set -g @continuum-restore 'on'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# for navigating between vim/tmux splits/panes
set -g @plugin 'christoomey/vim-tmux-navigator'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-y' if-shell "$is_vim" 'send-keys C-y'  'select-pane -L'
bind-key -n 'C-n' if-shell "$is_vim" 'send-keys C-n'  'select-pane -D'
bind-key -n 'C-e' if-shell "$is_vim" 'send-keys C-e'  'select-pane -U'
bind-key -n 'C-o' if-shell "$is_vim" 'send-keys C-o'  'select-pane -R'
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# for resizing vim/tmux splits/panes
bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left'  'resize-pane -L 3'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down'  'resize-pane -D 3'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up'  'resize-pane -U 3'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right'  'resize-pane -R 3'

# fzf searching and opening stuff
set -g @plugin 'laktak/extrakto'

# colors and status line
set -g @plugin 'odedlaz/tmux-onedark-theme'
set -g @plugin 'thewtex/tmux-mem-cpu-load'
set -g @onedark_widgets 'RAM #(tmux-mem-cpu-load --g 0 -m 2 -a 0  | sed "s/ / CPU /g")'
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_show_copy_mode 'on'
set -g @prefix_highlight_show_sync_mode 'on'
set -g @prefix_highlight_prefix_prompt 'Wait'
set -g @prefix_highlight_copy_prompt 'Copy'
set -g @prefix_highlight_sync_prompt 'Sync'

# ----------------------------------------------
# ------------------SETTINGS--------------------
# ----------------------------------------------

# make colors available
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g default-terminal "screen-256color"
# use zsh instead of default bash
set -g default-shell /bin/zsh
set -g default-command /bin/zsh

# Don't wait for an escape sequence after hitting
# Esc. fixes insert mode exit lag in vim.
set -g escape-time 0

# Mouse support
set -g mouse on

# make window/pane index start with 1
set -g base-index 1
setw -g pane-base-index 1

# don't rename windows automatically
set-option -g allow-rename off

# so you don't end up with window numbers like: 0 1 4 5 6
set-option -g renumber-windows on

# turn off visual notification of activity in other windows
setw -g monitor-activity off
set -g visual-activity off
set -g history-limit 20000

# When using the same session on multiple screens,
# you'll be limited by the smallest screen resolution
# on all screens. This can be mostly fixed by aggressive resize.
setw -g aggressive-resize on

# set prefixes for keyboardio
set-option -g prefix F11
set-option -g prefix2 F12

# ----------------------------------------------
# ------------------BINDINGS--------------------
# ----------------------------------------------

# reload tmux config in runtime
bind r source-file ~/.tmux.conf \;  display 'Reloaded tmux config.'

# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' begin/end selection as in Vim.
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X cursor-left
bind-key -T copy-mode-vi n send-keys -X cursor-down
bind-key -T copy-mode-vi e send-keys -X cursor-up
bind-key -T copy-mode-vi o send-keys -X cursor-right
# Split panes vertical
bind | split-window -h -c "#{pane_current_path}"
# Split panes horizontal
bind - split-window -v -c "#{pane_current_path}"
# prompt rename window to type it from scratch
bind , command-prompt -p "Enter new window name:" "rename-window '%%'"
# prompt rename session to type it from scratch
bind . command-prompt -p "Enter new session name:" "rename-session '%%'"
# prompt for a name for new window
bind-key c command-prompt -p "Enter new window name:" "new-window; rename-window '%%'"

run -b '~/.tmux/plugins/tpm/tpm'
